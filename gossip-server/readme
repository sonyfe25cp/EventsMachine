************************************************************************************
gossip-server：
运行前请打开memcached
	A.服务器端工程，主要作用就是http接受请求，返回JSON。例如：
		localhost:8080/gossip-server/events/set?page=0  //请求10个事件，优先读memcached，page指定第几个10，从0开始
		localhost:8080/gossip-server/events/db?id=0     //请求一个事件，优先读memcached，id对应数据库里的event id
		localhost:8080/gossip-server/events/rank?id=0   //请求一个事件，优先读memcached，id对应事件的排名
		localhost:8080/gossip-server/news/detail?id=0  //请求一个新闻，优先读memcached，否则读索引，id对应索引的文档id
	B.当前使用memcached将数据news：<"news:docid", newsJSON>和event：<"event:dbId", eventJSON>
	以及事件的排序rank:<"event-rank":<rankNum,dbId>>缓存(独一份，这么弄保持原子性)。"news:docid""event:rank"是
	String型键，例如：“news:1024”,“event:101”。前者表示新闻且在索引里面的docid为1024；后者表示事件，且该事件在db里面的id值为101。
	C.当memcached里面没有news时，发送socket到gossip，通过读索引读取文件（这么做的话，以后要是扩展
	检索功能就可以更加轻松）然后返回并放入memcached。同理，只是event在找不到时读的是db。
	
************************************************************************************	
关于如何启动并使用：
1. 创建mysql数据库，具体命令在本层的sql文件中
2. 启动memcached
	memcached  -d -m 10 -p 11211 -u root
3. 运行gossip项目下gossip.index包里面的IndexDaemon
4. 运行gossip项目下gossip.event包里面的EventDetectBoot
5. 运行gossip项目下gossip.sim包里面的SimilarityCalculator
6. 将gossip-server的包放到应用服务器下，启动服务器
	

	
8. 启动tomcat

8.1. 通过命令行启动

  ```bash
  mvn tomcat7:run
  ```
8.2. 在eclipse中启动。打开Run -> Run Configurations...，新建一个Maven Build，将goals设为tomcat7:run，点击Run。
9. 打开浏览器，访问[http://localhost:8080](http://localhost:8080)


10.jar安装
mvn install:install-file -DgroupId=com.sun.jmx -DartifactId=jmxri -Dversion=1.2.1 -Dpackaging=jar -Dfile=jmxri-1.2.1.jar
mvn install:install-file -DgroupId=com.sun.jdmk -DartifactId=jmxtools -Dversion=1.2.1 -Dpackaging=jar -Dfile=jmxtools.jar
mvn install:install-file -DgroupId=javax.jms -DartifactId=jms -Dversion=1.1 -Dpackaging=jar -Dfile=javax.jms.jar